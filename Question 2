from collections import defaultdict, deque

class FriendNetwork:
    def __init__(self):
        self.friends_map = defaultdict(set)

    def add_friend(self, person, friend):
        self.friends_map[person].add(friend)
        self.friends_map[friend].add(person)

    def get_friends(self, person):
        return self.friends_map.get(person, set())

    def get_common_friends(self, person1, person2):
        friends1 = self.get_friends(person1)
        friends2 = self.get_friends(person2)
        return friends1.intersection(friends2)

    def find_nth_connection(self, start, end):
        if start == end:
            return 0

        queue = deque([start])
        visited = set([start])
        connection_level = 0

        while queue:
            connection_level += 1
            for _ in range(len(queue)):
                current = queue.popleft()
                for friend in self.get_friends(current):
                    if friend == end:
                        return connection_level
                    if friend not in visited:
                        visited.add(friend)
                        queue.append(friend)

        return -1  # No connection found

def main():
    network = FriendNetwork()

    # Adding friends
    network.add_friend("Alice", "Bob")
    network.add_friend("Alice", "Charlie")
    network.add_friend("Bob", "David")
    network.add_friend("Charlie", "Emily")
    network.add_friend("David", "Emily")
    network.add_friend("David", "Janice")
    network.add_friend("Emily", "Frank")

    # Get friends of Alice and Bob
    print("Friends of Alice:", network.get_friends("Alice"))
    print("Friends of Bob:", network.get_friends("Bob"))

    # Get common friends of Alice and Bob
    print("Common friends of Alice and Bob:", network.get_common_friends("Alice", "Bob"))

    # Find nth connection
    print("Connection between Alice and Janice:", network.find_nth_connection("Alice", "Janice"))
    print("Connection between Alice and Bob:", network.find_nth_connection("Alice", "Bob"))
    print("Connection between Alice and Frank:", network.find_nth_connection("Alice", "Frank"))
    print("Connection between Alice and George:", network.find_nth_connection("Alice", "George"))  # George is not in the network

if __name__ == "__main__":
    main()
